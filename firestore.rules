
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is signed in
    function isSignedIn() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of a document
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Anyone can view a user's profile.
      allow get: if true;

      // A user can only create their own profile document.
      allow create: if isOwner(userId);

      // A user can only update their own profile document.
      allow update: if isOwner(userId);

      // Disallow deleting user profiles from the client.
      allow delete: if false;
    }

    // Rules for the 'properties' collection
    match /properties/{propertyId} {
      // Anyone can view (get) or list properties.
      allow get, list: if true;

      // A user must be signed in to create a property, and the 'lister.id'
      // in the new document must match their own user ID.
      allow create: if isSignedIn() && request.resource.data.lister.id == request.auth.uid;

      // Only the original lister can update their own property.
      // We check the 'lister.id' of the document that already exists in the database.
      allow update: if isSignedIn() && resource.data.lister.id == request.auth.uid;
      
      // Only the original lister can delete their own property.
      allow delete: if isSignedIn() && resource.data.lister.id == request.auth.uid;
    }

    // Rules for the 'chats' collection
    match /chats/{chatId} {
      // A user can only get or update a chat document if their user ID
      // is present in the 'participantIds' array of that document.
      allow get, update: if isSignedIn() && request.auth.uid in resource.data.participantIds;

      // A user can create a new chat document if they are signed in and
      // their user ID is included in the 'participantIds' of the new chat.
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;

      // Disallow deleting chat documents from the client.
      allow delete: if false;
    }
  }
}
