
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if a user is the owner of a document
    function isOwner(resource) {
      return request.auth.uid == resource.data.lister.id;
    }

    // Helper function to check if the user has an 'admin' role
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Helper function to check if the user is a service provider
    function isServiceProvider() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'service-provider';
    }

    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId || isAdmin();
      allow delete: if isAdmin();
    }
    
    match /properties/{propertyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isOwner(resource) || isAdmin();
      allow delete: if isOwner(resource) || isAdmin();
    }

    match /chats/{chatId} {
      allow read, write: if isAuthenticated() && request.auth.uid in resource.data.participantIds;
    }
    
    match /clothes/{category} {
      allow read: if isAuthenticated();
      allow create, update: if isServiceProvider() || isAdmin();
    }
    
    match /ironingOrders/{orderId} {
      allow read: if isAuthenticated(); // Allow user to see their own orders, and provider to see all
      allow create: if isAuthenticated();
      allow update: if isServiceProvider() || isAdmin();
    }

    match /ironingProfiles/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /counters/{counterId} {
       allow read, write: if isAuthenticated(); // Allow any authenticated user to increment counters
    }
  }
}
