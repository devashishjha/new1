
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to make rules clearer
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    // --- Users Collection ---
    // Anyone can view a user's public profile.
    // Only the user themselves can create or update their own profile document.
    match /users/{userId} {
      allow read: if true;
      allow create: if isUser(userId);
      allow update: if isUser(userId);
      allow delete: if false; // Disallow deleting user profiles for app integrity
    }

    // --- Properties Collection ---
    // Anyone can view all property listings.
    // Only signed-in users can create a new property, and they must be the lister.
    // Only the original lister is allowed to update or delete their property.
    match /properties/{propertyId} {
      allow read: if true;
      allow create: if isSignedIn() && request.resource.data.lister.id == request.auth.uid;
      allow update: if isSignedIn() && resource.data.lister.id == request.auth.uid;
      allow delete: if isSignedIn() && resource.data.lister.id == request.auth.uid;
    }

    // --- Chats Collection ---
    // A user can only interact with a chat if they are a participant.
    match /chats/{chatId} {
      allow read, update: if isSignedIn() && request.auth.uid in resource.data.participantIds;
      allow create: if isSignedIn() && request.auth.uid in request.resource.data.participantIds;
      allow delete: if false; // Disallow deleting chat history
    }
  }
}
